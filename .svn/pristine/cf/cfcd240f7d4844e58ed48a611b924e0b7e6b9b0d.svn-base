<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>

<div class="container">
	<div class="page-inner">
		<div class="container-fluid">
			<div class="container-fluid">
				<div class="card">
					<div class="page-header">
						<h3 class="fw-bold mb-3">발주 신청</h3>
						<ul class="breadcrumbs mb-3">
							<li class="nav-home"><a href="#"><i class="fa-solid fa-house"></i></a></li>
							<li class="separator"><i class="fa-solid fa-chevron-right"></i></li>
							<li class="nav-item"><a href="${cPath }/orders/ordersList.do">발주 현황리스트</a></li>
							<li class="separator"><i class="fa-solid fa-chevron-right"></i></li>
							<li class="nav-item"><a href="#">발주 신청</a></li>
						</ul>
					</div>
					<div class="table-top-box right-side">
						<nav class="button-box table-nav">
						<button type="button" id="submitAllBtn" class="btn btn-primary">
													<iclass ="fa-regular fa-paper-plane>신청
												</button>
										<a href="${cPath }/orders/ordersList.do" class="btn btn-primary">취소</a> 
						</nav>
					</div>
					<div class="page-body">
						<div class="m-table-outer">
							<div class="m-table-inner">
								<form:form method="post" modelAttribute="orders"
									enctype="multipart/form-data">
									<table>
										<tr>
											<th>분류</th>
											<td><form:select path="orderLgu" required="required"
													class="form-control" id="orderLgu">
													<form:option value="" label="분류선택" />
													<c:forEach items="${lprodList }" var="lprod">
														<form:option value="${lprod.lprodGu }"
															label="${lprod.lprodNm }" />
													</c:forEach>
												</form:select> <form:errors path="orderLgu" cssClass="text-danger"
													element="span" /></td>
										</tr>
										<tr>
											<th>제조사</th>
											<td><form:select path="orderBuyer" required="required"
													class="form-control" id="orderBuyer">
													<form:option value="" label="거래처선택" />
												</form:select> <form:errors path="orderBuyer" cssClass="text-danger"
													element="span" /></td>
										</tr>
										<tr>
											<th>제품</th>
											<td><form:select path="orderId" required="required"
													class="form-control" id="orderId">
													<form:option value="" label="제품선택" />
												</form:select> <form:errors path="orderId" cssClass="text-danger"
													element="span" /></td>
										</tr>
									</table>
								</form:form>
								
								<form id="orderForm" >
									<table>
										<thead>
											<tr>
												<th>상품코드</th>
												<th>상품명</th>
												<th>구매가</th>
												<th>수량</th>
												<th>합계</th>
											</tr>
										</thead>
										<tbody id="orderTbody">
												
										</tbody>
										
									</table>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Modal -->
<div class="modal fade" id="lostitem" tabindex="-1" data-bs-backdrop="#"
	data-bs-keyboard="false" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header border-0">

				<form:form method="post" modelAttribute="orders"
					action="${cPath }/order/oderInsert.do">
					<div class="modal-header">
						<h1 class="modal-title fs-5" id="newBoardLabel">입고명세서</h1>
					</div>
					<div class="modal-body">
						<table class="table table-bordered">
							<tr>
								<th>제품명</th>
								<td id="prodNm"></td>
							</tr>
								<form:input path="orderId" required="true" type="hidden"
										cssClass="form-control" value=""/> <form:errors
										path="orderId" cssClass="text-danger" element="span" />
							<tr>
								<th>제조사</th>
								<td id="buyerNm"></td>
							</tr>
							<tr>
								<th>현 재고수</th>
								<td id="qty"></td>
							</tr>
								<form:input path="orderBuyer" required="true" type="hidden"
										cssClass="form-control" value=""/> <form:errors
										path="orderBuyer" cssClass="text-danger" element="span" />
							<tr>
								<th>적정 재고수</th>
								<td id="totalQty"></td>
							</tr>
							<tr>
								<th>단가</th>
								<td id="price"></td>
							</tr>
							<tr>
								<th>수량</th>
								<td><form:input path="orderQty" class="form-control" type="number"
										required="true" value="1" /> <form:errors
										path="orderQty" cssClass="text-danger" element="span" /></td>
							</tr>
							<tr>
						    <tr>
							</tr>
						</table>

					</div>
					<div class="modal-footer">

						<button type="button" class="btn btn-primary" id="orderInsertBtn">
							<iclass ="fa-regular fa-paper-plane>등록
						</button>
						<button type="button" class="btn btn-secondary"
							data-bs-dismiss="modal">Close</button>
					</div>
				</form:form>
			</div>
		</div>
	</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $(document).ready(function() {
    
        $('#orderLgu').change(function() {
            const selectedLprodGu = $(this).val();

            $.ajax({
                url: '${cPath}/orders/ordersInsert.do/getBuyersByLprodGu', 
                type: 'GET',
                data: { lprodGu: selectedLprodGu },
                success: function(data) {
                    updateBuyerDropdown(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching buyer data:', textStatus, errorThrown);
                }
            });
        });

        $('#orderBuyer').change(function() {
            const selectedBuyerId = $(this).val();

            $.ajax({
                url: '${cPath}/orders/ordersInsert.do/getProductsByBuyerId',
                type: 'GET',
                data: { buyerId: selectedBuyerId },
                success: function(data) {
                    updateProductList(data);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching product data:', textStatus, errorThrown);
                }
            });
        });
        
        $('#orderId').change(function() {
            const selectedProdId = $(this).val();

            $.ajax({
                url: '${cPath}/orders/ordersInsert.do/getProductsByProdId',
                type: 'GET',
                data: { prodId: selectedProdId },
                success: function(data) {
                        const product = data; 
                        document.querySelector("#prodNm").textContent = product.prodName;
                        document.querySelector("#buyerNm").textContent = product.buyer.buyerName;
                        document.querySelector("#qty").textContent = product.prodProperstock;
                        document.querySelector("#totalQty").textContent = product.prodTotalstock;
                        document.querySelector("#price").textContent = product.prodPrice;
                        document.querySelector("input[name=orderId]").value = product.prodId; 
                        document.querySelector("input[name=orderBuyer]").value = product.prodBuyer; 
                	$('#lostitem').modal('show');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching product data:', textStatus, errorThrown);
                }
            });
        });
     
        function calculateTotal() {
        	  const orderQty = $('#orderQty').val(); 
        	  const orderPrice = $('#orderPrice').val();
        	  const orderTotal = orderQty * orderPrice;
        	  $('#orderTotal').val(orderTotal); 
        	}

        	$('#orderQty').change(function() {
        	  calculateTotal();
        	});
        function updateBuyerDropdown(buyerData) {
        	$('#orderBuyer').empty();
            $('#orderBuyer').append($('<option value="">').text('거래처선택'));

            $.each(buyerData, function(index, buyer) {
                const option = $('<option>').val(buyer.buyerId).text(buyer.buyerName);
                $('#orderBuyer').append(option);
            });
        }

        function updateProductList(productData) {
        	$('#orderId').empty(); 
        	$('#orderId').append($('<option value="">').text('제품선택'));
        	$.each(productData, function(index, prod) {
                const option = $('<option>').val(prod.prodId).text(prod.prodName);
                $('#orderId').append(option);
                
            });
        }
        $('#orderInsertBtn').click(function() {
    	    const orderProdName = document.querySelector("#prodNm").textContent;
    	    const orderProdPrice = document.querySelector("#price").textContent;
    	    const orderProdQty = $('#orderQty').val();
    	    const orderTotal = orderProdPrice * orderProdQty;
    	    const orderProdId = $('#orderId').val();
			
    	    if(orderProdQty == null || orderProdQty == "" ||orderProdQty < 0){
                alert("수량을 입력해주세요!");
                return false;
            }
    	    $('#lostitem').modal('hide');
    	    const tbody = $("#orderTbody");

    	    const newRow = $('<tr>');

    	    newRow.append($('<td>').text(orderProdId));
    	    newRow.append($('<td>').text(orderProdName));
    	    newRow.append($('<td>').text(orderProdPrice));
    	    newRow.append($('<td>').text(orderProdQty));
    	    newRow.append($('<td>').text(orderTotal));
    	    newRow.append($('<td>').append('<button class="deleteBtn">삭제</button>'));

    	    tbody.append(newRow);
    	    
    	});
    	$(document).on('click', '.deleteBtn', function() {
    		  $(this).closest('tr').remove();
    		});
        function submitFormData() {
    	    const formData = [];
    	    $('#orderTbody tr').each(function() {
    	        const prodId = $(this).find('td:eq(0)').text();
    	        const prodQty = $(this).find('td:eq(3)').text();
    	        const total = $(this).find('td:eq(4)').text();
    	        formData.push({
    	            orderId: prodId,
    	            orderProdQty: prodQty,
    	            orderTotal: total,
    	        });
    	    });
    	    if(formData == null || formData == ""){
                alert("신청 정보가 없습니다.");
                return false;
            }
    	    $.ajax({
    	        url: '${cPath}/orders/ordersInsert.do',
    	        type: 'POST',
    	        dataType: 'json',
    	        contentType: 'application/json; charset=UTF-8',
    	        data: JSON.stringify(formData),
    	        success: function(data) {
    	            alert("발주신청이 완료되었습니다.");
    	            window.location.href = '${cPath}/orders/ordersList.do';
    	        },
    	        error: function(xhr, status, error) {
    	            console.error(error);   
    	        }
    	    });
    	}
        $('#submitAllBtn').click(function() {
            // 확인창 표시
            var isConfirmed = confirm("정말 신청하시겠습니까?");
            if (isConfirmed) {
                submitFormData();
            } else {
                console.log("신청이 취소되었습니다.");
            }
        });
    });
</script>
