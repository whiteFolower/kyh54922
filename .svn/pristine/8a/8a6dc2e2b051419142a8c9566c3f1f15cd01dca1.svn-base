package kr.or.ddit.pmsworkstatus.controller;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.pmsworkstatus.service.WorkTimeService;
import kr.or.ddit.vo.WorkDateVO;

@Controller
@RequestMapping("/pmsworkstatus")
public class PmsworkStatusController {

	@Autowired
		private WorkTimeService timeservice;

	private static final String TEMP_EMP_ID = "24AE04001";  // 임시 직원 ID

	@GetMapping("workstatus.do")
	public String pmsworkstatus() {

		return "tiles:pmsworkstatus/workstatus";
	}


	@PostMapping("/attendance")
	@ResponseBody
	public ResponseEntity<?> recordAttendance(@RequestBody Map<String, String> request ){
		String type = request.get("type");
//		String empId = getCurrentUser().getEmpId();
		LocalDateTime now = LocalDateTime.now();

		WorkDateVO workdatevo = new WorkDateVO();
		workdatevo.setEmpId(TEMP_EMP_ID);
		workdatevo.setWorkDate(now.toLocalDate());

		boolean success = false;
		if("checkIn".equals(type)) {
			workdatevo.setWorkStart(now);
			workdatevo.setWorkStatus("출근");
			success = timeservice.recordCheckIn(workdatevo);
		}else if("checkOut".equals(type)) {
			workdatevo.setWorkEnd(now);
			workdatevo.setWorkStatus("퇴근");
			success = timeservice.recordCheckOut(workdatevo);
		}else {
			return ResponseEntity.badRequest().body("잘못된 출석 값 ");
		}
		return ResponseEntity.ok().body(Collections.singletonMap("success", success));
	}


	@GetMapping("/worktime")
	@ResponseBody
	private ResponseEntity<List<WorkDateVO>> getWorkSchedule(@RequestParam String workStart, @RequestParam String workEnd) {
//		String empId = getCurrentUser().getEmpId();
		 List<WorkDateVO> workSchedule = timeservice.getWorkSchedule(TEMP_EMP_ID, workStart, workEnd);
		return ResponseEntity.ok(workSchedule);
	}

	
//	private WorkDateVO getCurrentUser() {
//		// TODO Auto-generated method stub
//		return null;
//	}





}
