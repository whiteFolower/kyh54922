package kr.or.ddit.room.controller;

import java.util.Collections;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.emp.dao.EmpMapper;
import kr.or.ddit.room.service.RoomService;
import kr.or.ddit.vo.EmpVO;
import kr.or.ddit.vo.RoomVO;

@Controller
@RequestMapping("/roommaintenance")
public class RoomRetrieveController {

	@Autowired
	private RoomService service;

	@Autowired
	private EmpMapper empmapper;


	/**
	 * 다른 mapper에서 값을 불러올때 사용함
	 * @param model
	 * @return
	 */
	@ModelAttribute("empList")
	private List<EmpVO> addAttribute(Model model){
		return empmapper.empdepList();
	}


	@GetMapping("/roomList.do")
	public String roomList(Model model) {
		List<RoomVO> roomList = service.readRoomList();
		model.addAttribute("roomList", roomList);
		return "tiles:room/roommaintenance";
	}

	@GetMapping("/roomDetail.do")
	@ResponseBody
	public RoomVO detail(@RequestParam("what")String roomId) {
		RoomVO room = service.readRoom(roomId);
		return room;
	}



	@GetMapping
	public String formUI() {
		return "tiles:room/roommaintenance";
	}

	@PostMapping("/roomInsert.do")
    public ResponseEntity<?> formDataProcess(
            @Valid @ModelAttribute("room") RoomVO room,
            BindingResult bindingResult) {

        // 검증 오류 처리
        if (bindingResult.hasErrors()) {
            // Validation errors, return error messages
            return ResponseEntity.badRequest().body(
                Collections.singletonMap("errorMessage", "Validation failed.")
            );
        }

        try {
            // 서비스 호출
            service.createRoom(room);

            // 성공 메시지 반환
            return ResponseEntity.ok().body(
                Collections.singletonMap("successMessage", "Room successfully created!")
            );
        } catch (Exception e) {
            // 예외 처리
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(
                Collections.singletonMap("errorMessage", "Failed to create room.")
            );
        }
    }
//    @PostMapping("/roomInsert.do")
//    public String formDataProcess(
//            @ModelAttribute("room") RoomVO room,
//            BindingResult bindingResult,
//            RedirectAttributes redirectAttributes) {
//
//        // Validation
//        if (bindingResult.hasErrors()) {
//            redirectAttributes.addFlashAttribute(BindingResult.MODEL_KEY_PREFIX + "room", bindingResult);
//            return "redirect:/roommaintenance";
//        }
//
//        try {
//            // Save room
//            service.createRoom(room);
//
//            // Set success message
//            redirectAttributes.addFlashAttribute("successMessage", "Room successfully created!");
//        } catch (Exception e) {
//            // Log and handle exception
//            e.printStackTrace();
//            redirectAttributes.addFlashAttribute("errorMessage", "Failed to create room.");
//        }
//
//        // Redirect to the form page
//        return "redirect:/roommaintenance";
//    }
}




