document.addEventListener("DOMContentLoaded", function() {
    const cPath = document.body.dataset.contextPath;
    const revform = document.querySelector("#revform");
    const inps = revform.querySelectorAll("input");
    const roomCnt = document.querySelectorAll("input[name='roomCnt']");
    const changeRoomCnt = document.querySelector("#changeRoomCnt");
    const resetRooms = document.querySelector("#resetRooms");
    const revGubun = document.querySelector("#revGubun");
    const roomTypes = document.querySelectorAll(".roomTypeName");
    const roomPrices = document.querySelectorAll(".roomPrices");
    const priceArea = document.querySelector("#price-area");
    const htrevStay = document.querySelector("input[name='htrevStay']");
    const htervChkin = document.querySelector("input[name='htervChkin']");
    const htervChkout = document.querySelector("input[name='htervChkout']");
    const overview = document.querySelector("#overview");
    const roomModal = document.querySelector("#roomModal");
    const modalConfirmBtn = document.querySelector("#confirm");

	let newKey = "";
    let currentRow; // Variable to store the current row being edited

    htervChkout.addEventListener("change", function(e) {
        let day1 = htervChkin.value;
        let day2 = e.target.value;

        let dayDiff = 0;

        if (day1) {
            const dayIn = new Date(day1);
            const dayOut = new Date(day2);

            const diff = dayOut.getTime() - dayIn.getTime();

            dayDiff = diff / (1000 * 60 * 60 * 24);

            if (diff < 0) {
                alert("날짜 확인!");
                htervChkin.value = "";
                e.target.value = "";
            } else {
                htrevStay.value = dayDiff;
            }
        }
    });

    changeRoomCnt.addEventListener("click", function(e) {
        e.preventDefault();
        let tds = "";
        let stay = htrevStay.value;
        let sum = 0;

        for (let i = 0; i < roomTypes.length; i++) {
            let price = roomPrices[i].innerHTML;
            let cnt = roomCnt[i].value;
            let multiple = price * cnt * stay;
            sum += multiple;

            if (!cnt) {
                cnt = 0;
            }
            if (cnt != 0) {
                tds += `
                    <td>${roomTypes[i].innerHTML}</td>
                    <td><span class="price">${multiple.toLocaleString()}</span>원</td>
                `;
            }
        }
        tds += `
            <td>합계</td>
            <td><span class="price">${sum.toLocaleString()}</span>원</td>
        `;
        priceArea.innerHTML = tds;

        let chkIn = htervChkin.value;
        let chkOut = htervChkout.value;
        let revRoom = [];
        let roomNames = [];

        roomCnt.forEach((r) => {
            revRoom.push(parseInt(r.value) || 0);
        });

        axios.post(`${cPath}/workInRev/getRoomNumber.do`, {
            revRoom: revRoom,
            htrevChkin: chkIn,
            htrevChkout: chkOut
        })
        .then(function(res) {
            console.log(res.data);
			newKey = res.data.newKey;
            let posRooms = res.data.possibleRoomList;
            let rooms = [];
            for (let i = 1; i <= 5; i++) {
                rooms[i] = posRooms.filter(r => r.roomtypeId === String(i)).map(r => r.roomId);
            }

            roomTypes.forEach((rs) => {
                roomNames.push(rs.innerText);
            });

            let roomCntValues = Array.from(roomCnt).map(r => parseInt(r.value) || 0);
            let roomTypeNames = Array.from(document.querySelectorAll(".roomTypeName")).map(rt => rt.innerHTML);

            overview.innerHTML = "";

            roomCntValues.forEach((count, index) => {
                if (count > 0) {
                    for (let i = 0; i < count; i++) {
                        let row = `
                            <tr>
                                <td>${roomTypeNames[index]}</td>
                                <td><button type="button" class="sel-room" data-room-type="${index}" data-bs-toggle="modal" data-bs-target="#roomModal">선택</button></td>
                                <td class="roomNumber"></td>
                            </tr>
                        `;
                        overview.innerHTML += row;
                    }
                }
            });

            let btns = document.querySelectorAll(".sel-room");

            btns.forEach(btn => {
                btn.addEventListener("click", function() {
                    currentRow = this.parentNode.parentNode; // Store the row where the button was clicked
                    let roomTypeIndex = this.getAttribute("data-room-type");
                    let modalBody = roomModal.querySelector(".modal-body");
                    let roomList = rooms[parseInt(roomTypeIndex) + 1];

                    // Function to chunk array into chunks of size
                    function chunkArray(array, size) {
                        const result = [];
                        for (let i = 0; i < array.length; i += size) {
                            result.push(array.slice(i, i + size));
                        }
                        return result;
                    }

                    // Create HTML for modal body with rooms in chunks of 10
                    let roomChunks = chunkArray(roomList, 5);
                    let modalContent = `
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>선택</th>
                                    <th>객실 번호</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${roomChunks.map(chunk => `
                                    <tr>
                                        ${chunk.map(roomId => `
                                            <td><input type="radio" name="roomId" value="${roomId}"></td>
                                            <td class="roomIds">${roomId}</td>
                                        `).join('')}
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    `;
                    modalBody.innerHTML = modalContent;
                });
            });

            // Handle modal confirm button click
            modalConfirmBtn.addEventListener("click", function() {
                let selectedRoomId = document.querySelector("input[name='roomId']:checked");
                if (selectedRoomId) {
                    let selectedValue = selectedRoomId.value;
                    let roomNumberCell = currentRow.querySelector(".roomNumber");
                    roomNumberCell.innerHTML = selectedValue;
                }
            });

        }).catch(function(err) {
            console.log(err);
        });
    });

    resetRooms.addEventListener("click", function(e) {
        roomCnt.forEach((r) => { r.value = ""; });
        priceArea.innerHTML = "";
        overview.innerHTML = "";
    });

    revform.addEventListener("submit", function(e) {
        e.preventDefault();
        let url = e.target.action;
		let roomIds = document.querySelectorAll(".roomNumber");
		let roomNums = [];

		roomIds.forEach((ids)=>{
			roomNums.push(ids.innerText);
		})//roomNums : 예약 대상이되는 room_id

/*
		axios.post(`${url}`, {

		}).then(function(result){

		}).catch(function(error){
			console.log(error);
		})
*/





































    });
});
