package kr.or.ddit.housekeeping.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.SmartValidator;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.commons.paging.DefaultPaginationRenderer;
import kr.or.ddit.commons.paging.PaginationInfo;
import kr.or.ddit.commons.paging.SimpleCondition;
import kr.or.ddit.housekeeping.service.broken.BrokenroomService;
import kr.or.ddit.vo.BrokenRoomVO;





@Controller
@RequestMapping("/brokenroom")
public class BrokenroomController {

	@Autowired
	private BrokenroomService service;

	@GetMapping
	public String list(@RequestParam(required = false ,defaultValue = "1") int page
			, @ModelAttribute("condition") SimpleCondition simpleCondition
			, Model model){
		PaginationInfo paging = new PaginationInfo();
		paging.setPage(page); //페이지 셋팅
		paging.setSimpleCondition(simpleCondition); //검색조건 셋팅

		List<BrokenRoomVO> brokenList = service.readBrokenList(paging);
		model.addAttribute("brokenList", brokenList);

		DefaultPaginationRenderer rederer = new DefaultPaginationRenderer();
		String pagingHTML = rederer.renderPagination(paging);

		model.addAttribute("pagingHTML", pagingHTML);

		return "tiles:brokenroom/brokenList";
		
	}

	@GetMapping("/brokenroomDetail.do")
	@ResponseBody   // JSON으로 쓰려면 필요한 부분
	public BrokenRoomVO detail(@RequestParam("what") String hkbNo) {
		BrokenRoomVO broken = service.readBroken(Integer.parseInt(hkbNo));
		return broken;
	}

//1



}
