<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.buyer.dao.BuyerMapper">
	<insert id="insertBuyer" parameterType="BuyerVO">
		<selectKey order="BEFORE" resultType="string"
			keyProperty="buyerId">
			SELECT #{buyerLgu} || LPAD(NVL(TO_NUMBER(SUBSTR(
			MAX(BUYER_ID) , 5)), 0) + 1, 2, '0')
			FROM BUYER
			where buyer_lgu =
			#{buyerLgu}
		</selectKey>
		INSERT INTO BUYER(
		BUYER_ID
		, BUYER_NAME
		, BUYER_LGU
		, BUYER_BANK
		, BUYER_BANKNO
		, BUYER_BANKNAME
		, BUYER_ZIP
		, BUYER_ADD1
		, BUYER_ADD2
		, BUYER_COMTEL
		, BUYER_FAX
		, BUYER_MAIL
		, BUYER_CHARGER
		)VALUES(
		#{buyerId,jdbcType=CHAR}
		, #{buyerName,jdbcType=VARCHAR}
		, #{buyerLgu,jdbcType=CHAR}
		, #{buyerBank,jdbcType=VARCHAR}
		, #{buyerBankno,jdbcType=VARCHAR}
		, #{buyerBankname,jdbcType=VARCHAR}
		, #{buyerZip,jdbcType=CHAR}
		, #{buyerAdd1,jdbcType=VARCHAR}
		, #{buyerAdd2,jdbcType=VARCHAR}
		, #{buyerComtel,jdbcType=VARCHAR}
		, #{buyerFax,jdbcType=VARCHAR}
		, #{buyerMail,jdbcType=VARCHAR}
		, #{buyerCharger,jdbcType=VARCHAR}
		)
	</insert>

	<resultMap type="BuyerVO" id="buyerMap" autoMapping="true">
		<id property="buyerId" column="BUYER_ID" />
		<association property="lprod" javaType="LprodVO"
			autoMapping="true" />
		<collection property="prodList" ofType="ProdVO"
			autoMapping="true" />
	</resultMap>

	<select id="selectBuyer" resultMap="buyerMap">
		WITH BUYERVIEW AS (
		SELECT
		BUYER_ID
		, BUYER_NAME
		, BUYER_LGU
		, BUYER_BANK
		, BUYER_BANKNO
		, BUYER_BANKNAME
		, BUYER_ZIP
		, BUYER_ADD1
		, BUYER_ADD2
		, BUYER_COMTEL
		, BUYER_FAX
		, BUYER_MAIL
		, BUYER_CHARGER
		, LPROD_ID, LPROD_GU, LPROD_NM
		FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)
		)
		SELECT BUYERVIEW.*
		, PROD_ID, PROD_NAME, PROD_PRICE
		FROM BUYERVIEW LEFT OUTER JOIN PROD ON
		(BUYER_ID = PROD_BUYER)
		WHERE BUYER_ID = #{buyerId}
	</select>

	<sql id="searchFrag">
		FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)
		<trim prefix=" WHERE ">
			<if
				test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when test="simpleCondition.searchType eq 'name'">
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) >
						0
					</when>
					<when test="simpleCondition.searchType eq 'lgu'">
						INSTR(LPROD_NM, #{simpleCondition.searchWord}) >
						0
					</when>
					<otherwise>
						INSTR(BUYER_NAME, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LPROD_NM, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
		</trim>
	</sql>

	<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(*)
		<include refid="searchFrag" />
	</select>

	<select id="findByLprodGu" resultMap="buyerMap">
		SELECT BUYER.*
		FROM BUYER
		WHERE BUYER_LGU = #{buyerLgu}
	</select>

	<select id="selectBuyerList" resultType="BuyerVO">
		SELECT B.*
		FROM (
		SELECT A.*, ROWNUM RNUM
		FROM (
		SELECT
		BUYER_ID
		, BUYER_NAME
		, BUYER_LGU
		, BUYER_ADD1
		, BUYER_COMTEL
		, BUYER_MAIL
		, BUYER_CHARGER
		, LPROD_NM "lprod.lprodNm"
		, (
		SELECT COUNT(PROD_ID) FROM PROD
		WHERE PROD_BUYER = BUYER_ID
		) PROD_COUNT
		<include refid="searchFrag" />
		) A
		) B
		WHERE RNUM BETWEEN #{firstRecord} AND #{lastRecord}
	</select>
	
		<select id="selectAll" resultType="BuyerVO">
		SELECT
		BUYER_ID
		, BUYER_NAME
		, BUYER_LGU
		, BUYER_BANK
		, BUYER_BANKNO
		, BUYER_BANKNAME
		, BUYER_ZIP
		, BUYER_ADD1
		, BUYER_ADD2
		, BUYER_COMTEL
		, BUYER_FAX
		, BUYER_MAIL
		, BUYER_CHARGER
		, LPROD_ID, LPROD_GU, LPROD_NM
		FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)
	</select>
	
	<update id="updateBuyer">
		UPDATE BUYER
		SET
		BUYER_NAME=#{buyerName,jdbcType=VARCHAR}
		, BUYER_BANK=#{buyerBank,jdbcType=VARCHAR}
		, BUYER_BANKNO=#{buyerBankno,jdbcType=VARCHAR}
		, BUYER_BANKNAME=#{buyerBankname,jdbcType=VARCHAR}
		, BUYER_ZIP=#{buyerZip,jdbcType=CHAR}
		, BUYER_ADD1=#{buyerAdd1,jdbcType=VARCHAR}
		, BUYER_ADD2=#{buyerAdd2,jdbcType=VARCHAR}
		, BUYER_COMTEL=#{buyerComtel,jdbcType=VARCHAR}
		, BUYER_FAX=#{buyerFax,jdbcType=VARCHAR}
		, BUYER_MAIL=#{buyerMail,jdbcType=VARCHAR}
		, BUYER_CHARGER=#{buyerCharger,jdbcType=VARCHAR}
		WHERE BUYER_ID =
		#{buyerId}
	</update>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from BUYER
		where BUYER_ID = #{buyerId,jdbcType=CHAR}
	</delete>
</mapper>